<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>eu.eventstorm</groupId>
		<artifactId>eventstorm</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>eventstorm-batch</artifactId>

	<dependencies>

		<dependency>
			<groupId>eu.eventstorm</groupId>
			<artifactId>eventstorm-core-api</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>eu.eventstorm</groupId>
			<artifactId>eventstorm-cqrs</artifactId>
			<version>${project.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>eu.eventstorm</groupId>
			<artifactId>eventstorm-problem</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>eu.eventstorm</groupId>
			<artifactId>eventstorm-sql-apt</artifactId>
			<version>${project.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>eu.eventstorm</groupId>
			<artifactId>eventstorm-core-apt</artifactId>
			<version>${project.version}</version>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>eu.eventstorm</groupId>
			<artifactId>eventstorm-test</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.os72</groupId>
				<artifactId>protoc-jar-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>protobuf-generate-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<protocVersion>${com.google.protobuf.version}</protocVersion>
							<protocArtifact>com.google.protobuf:protoc:${com.google.protobuf.version}</protocArtifact>
							<includeImports>true</includeImports>
							<!-- let compiler use well defined types from protobuf itself. -->
							<includeStdTypes>true</includeStdTypes>
							<!-- always recompile. True (default) means: Only recompile if changed. -->
							<optimizeCodegen>true</optimizeCodegen>
							<inputDirectories>
								<include>src/main/resources</include>
							</inputDirectories>
							<outputDirectory>target/generated-sources</outputDirectory>
							<outputDirectorySuffix>protobuf</outputDirectorySuffix>
						</configuration>
					</execution>
					<execution>
						<id>protobuf-generate-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<protocVersion>${com.google.protobuf.version}</protocVersion>
							<protocArtifact>com.google.protobuf:protoc:${com.google.protobuf.version}</protocArtifact>
							<inputDirectories>
								<include>src/test/resources</include>
							</inputDirectories>
							<outputDirectory>target/generated-test-sources</outputDirectory>
							<outputDirectorySuffix>protobuf</outputDirectorySuffix>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/protobuf</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-test-sources/protobuf</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<encoding>UTF-8</encoding>
							<resources>
								<resource>
									<filtering>false</filtering>
									<directory>${project.build.directory}/generated-sources/annotations</directory>
									<includes>
										<include>**/*.sql</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>